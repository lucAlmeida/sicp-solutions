(define (f n)
  (cond ((< n 3) n)
	(else (+ (f (- n 1))
		 (* 2 (f (- n 2)))
		 (* 3 (f (- n 3)))))))

(define (fi n)
  (define (fi-iter a b c count)
    (cond ((< count 3) (+ a b c))
	  (else (fi-iter a (* 2 b) (* 3 c) (- count 1)))))
  (fi-iter (- n 1) (- n 2) (- n 3) n))

(define (fi n)
  (define (fi-iter a b c count)
    (cond ((= count 0) c)
	  ((= count 1) b)
	  ((= count 2) a)
	  (else (fi-iter (+ a (* 2 b) (* 3 c)) a b (- count 1)))))
  (fi-iter 2 1 0 n))
